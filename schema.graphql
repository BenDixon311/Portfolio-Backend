type Query {
  project(projectId: ID!): Project
  projects: [Project!]!
  projectFrontEnd: [Project!]!
  projectBackEnd: [Project!]!
  projectFullStack: [Project!]!
  projectDesign: [Project!]!
  projectPersonal: [Project!]!
  projectType(projectType: DevType!): [Project!]!
}

type Mutation {
  createProject(title: String!, description: String!, devtype: DevType!, solo: Boolean!, imgurl: String!): Project
  updateProject(id: ID!, title: String, description: String, devtype: DevType, solo: Boolean, imgurl: String!): Project
  deleteProject(id: ID!): Project
  }

type Project {
    id: ID!
    title: String!
    description: String!
    devtype: DevType!
    solo: Boolean!
    imgurl: String!
    projects: [Project!]!
}

enum DevType {
  FRONT_END
  BACK_END
  FULL_STACK
  DESIGN
}